{
  "openapi": "3.0.2",
  "info": {
    "title": "AI Interviewer Agent API",
    "description": "API for AI interview preparation services",
    "version": "1.0.0"
  },
  "paths": {
    "/api/interview/start": {
      "post": {
        "summary": "Start Interview",
        "description": "Start a new interview session.\n\nArgs:\n    config: Interview configuration\n    db: Database session\n    \nReturns:\n    Information about the created session",
        "operationId": "start_interview_api_interview_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/send": {
      "post": {
        "summary": "Send Message",
        "description": "Send a message to the interview agent.\n\nArgs:\n    message: The user's message\n    background_tasks: FastAPI background tasks\n    db: Database session\n    orchestrator: Orchestrator instance\n    \nReturns:\n    Agent response",
        "operationId": "send_message_api_interview_send_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/end": {
      "post": {
        "summary": "End Interview",
        "description": "End an interview session.\n\nArgs:\n    message: The user's message (session_id required)\n    background_tasks: FastAPI background tasks\n    db: Database session\n    orchestrator: Orchestrator instance\n    \nReturns:\n    End confirmation and summary",
        "operationId": "end_interview_api_interview_end_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response End Interview Api Interview End Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/sessions": {
      "get": {
        "summary": "List Sessions",
        "description": "List active interview sessions.\n\nArgs:\n    user_id: Filter by user ID\n    \nReturns:\n    List of active sessions",
        "operationId": "list_sessions_api_interview_sessions_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string"
            },
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Sessions Api Interview Sessions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionInfo"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/info": {
      "get": {
        "summary": "Get Session Info",
        "description": "Get information about an interview session.\n\nArgs:\n    session_id: The session identifier\n    \nReturns:\n    Session information",
        "operationId": "get_session_info_api_interview_info_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/metrics": {
      "get": {
        "summary": "Get Session Metrics",
        "description": "Get metrics for an interview session.\n\nArgs:\n    session_id: The session identifier\n    orchestrator: Orchestrator instance\n    \nReturns:\n    Session metrics",
        "operationId": "get_session_metrics_api_interview_metrics_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/history": {
      "get": {
        "summary": "Get Conversation History",
        "description": "Get the conversation history for a session.\n\nArgs:\n    session_id: The session identifier\n    orchestrator: Orchestrator instance\n    \nReturns:\n    List of conversation messages",
        "operationId": "get_conversation_history_api_interview_history_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Conversation History Api Interview History Get",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/skill-assessment": {
      "post": {
        "summary": "Start Skill Assessment",
        "description": "Start a skill assessment session or switch existing session to skill assessment mode.\n\nArgs:\n    message: User message with session ID\n    background_tasks: FastAPI background tasks\n    db: Database session\n    \nReturns:\n    Skill assessment initialization confirmation",
        "operationId": "start_skill_assessment_api_interview_skill_assessment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Start Skill Assessment Api Interview Skill Assessment Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/skills": {
      "get": {
        "summary": "Get Skills",
        "description": "Get skills assessed in an interview session.\n\nArgs:\n    session_id: The session identifier\n    db: Database session\n    \nReturns:\n    List of skill assessments",
        "operationId": "get_skills_api_interview_skills_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skills Api Interview Skills Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillAssessment"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/skill-profile": {
      "get": {
        "summary": "Get Skill Profile",
        "description": "Get a comprehensive skill profile for an interview session.\n\nArgs:\n    session_id: The session identifier\n    orchestrator: Orchestrator instance\n    db: Database session\n    \nReturns:\n    Comprehensive skill profile",
        "operationId": "get_skill_profile_api_interview_skill_profile_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/interview/skill-resources": {
      "get": {
        "summary": "Get Skill Resources",
        "description": "Get resources for improving a specific skill.\n\nArgs:\n    skill_name: The skill to get resources for\n    session_id: The session identifier\n    proficiency_level: Optional proficiency level (beginner, intermediate, advanced, expert)\n    orchestrator: Orchestrator instance\n    db: Database session\n    \nReturns:\n    List of skill resources",
        "operationId": "get_skill_resources_api_interview_skill_resources_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Skill Name",
              "type": "string"
            },
            "name": "skill_name",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Proficiency Level",
              "type": "string"
            },
            "name": "proficiency_level",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skill Resources Api Interview Skill Resources Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillResource"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/tracking": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Track Resource Action",
        "description": "Track resource usage actions.\n\nArgs:\n    action: Resource action details\n    db: Database session\n    \nReturns:\n    Success message",
        "operationId": "track_resource_action_api_resources_tracking_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Track Resource Action Api Resources Tracking Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/feedback": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Record Resource Feedback",
        "description": "Record feedback on a resource.\n\nArgs:\n    feedback: Resource feedback details\n    db: Database session\n    \nReturns:\n    Success message",
        "operationId": "record_resource_feedback_api_resources_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceFeedbackModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Record Resource Feedback Api Resources Feedback Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/effectiveness": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Get Resource Effectiveness",
        "description": "Get resource effectiveness metrics.\n\nArgs:\n    session_id: Session identifier\n    skill_name: Optional skill name to filter by\n    db: Database session\n    \nReturns:\n    Resource effectiveness metrics",
        "operationId": "get_resource_effectiveness_api_resources_effectiveness_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skill Name",
              "type": "string"
            },
            "name": "skill_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Resource Effectiveness Api Resources Effectiveness Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts": {
      "get": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "List Transcripts",
        "description": "List transcripts with optional filtering.",
        "operationId": "list_transcripts_api_transcripts_api_transcripts_get",
        "parameters": [
          {
            "description": "Filter by user ID",
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string",
              "description": "Filter by user ID"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "description": "Filter by session ID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "type": "string",
              "description": "Filter by session ID"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "description": "Filter by tags",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by tags"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "description": "Filter by imported status",
            "required": false,
            "schema": {
              "title": "Is Imported",
              "type": "boolean",
              "description": "Filter by imported status"
            },
            "name": "is_imported",
            "in": "query"
          },
          {
            "description": "Filter by public status",
            "required": false,
            "schema": {
              "title": "Is Public",
              "type": "boolean",
              "description": "Filter by public status"
            },
            "name": "is_public",
            "in": "query"
          },
          {
            "description": "Maximum number of transcripts to return",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Maximum number of transcripts to return",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Offset for pagination",
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "description": "Offset for pagination",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Create Transcript",
        "description": "Create a new transcript.",
        "operationId": "create_transcript_api_transcripts_api_transcripts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/from-session": {
      "post": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Create Transcript From Session",
        "description": "Create a transcript from an existing interview session.",
        "operationId": "create_transcript_from_session_api_transcripts_api_transcripts_from_session_post",
        "parameters": [
          {
            "description": "Interview session ID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string",
              "description": "Interview session ID"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "description": "Optional title for the transcript",
            "required": false,
            "schema": {
              "title": "Title",
              "type": "string",
              "description": "Optional title for the transcript"
            },
            "name": "title",
            "in": "query"
          },
          {
            "description": "Optional summary for the transcript",
            "required": false,
            "schema": {
              "title": "Summary",
              "type": "string",
              "description": "Optional summary for the transcript"
            },
            "name": "summary",
            "in": "query"
          },
          {
            "description": "Optional tags for the transcript",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional tags for the transcript"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "description": "Whether the transcript is publicly accessible",
            "required": false,
            "schema": {
              "title": "Is Public",
              "type": "boolean",
              "description": "Whether the transcript is publicly accessible",
              "default": false
            },
            "name": "is_public",
            "in": "query"
          },
          {
            "description": "Whether to generate embeddings",
            "required": false,
            "schema": {
              "title": "Generate Embeddings",
              "type": "boolean",
              "description": "Whether to generate embeddings",
              "default": true
            },
            "name": "generate_embeddings",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/{transcript_id}": {
      "get": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Get Transcript",
        "description": "Get a transcript by ID.",
        "operationId": "get_transcript_api_transcripts_api_transcripts__transcript_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transcript Id",
              "type": "integer"
            },
            "name": "transcript_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Update Transcript",
        "description": "Update a transcript.",
        "operationId": "update_transcript_api_transcripts_api_transcripts__transcript_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transcript Id",
              "type": "integer"
            },
            "name": "transcript_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Delete Transcript",
        "description": "Delete a transcript.",
        "operationId": "delete_transcript_api_transcripts_api_transcripts__transcript_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transcript Id",
              "type": "integer"
            },
            "name": "transcript_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/{transcript_id}/export": {
      "get": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Export Transcript",
        "description": "Export a transcript in the specified format.",
        "operationId": "export_transcript_api_transcripts_api_transcripts__transcript_id__export_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transcript Id",
              "type": "integer"
            },
            "name": "transcript_id",
            "in": "path"
          },
          {
            "description": "Export format",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TranscriptFormat"
                }
              ],
              "description": "Export format",
              "default": "json"
            },
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/import": {
      "post": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Import Transcript",
        "description": "Import a transcript from a file.",
        "operationId": "import_transcript_api_transcripts_api_transcripts_import_post",
        "parameters": [
          {
            "description": "Import format",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TranscriptFormat"
                }
              ],
              "description": "Import format",
              "default": "json"
            },
            "name": "format",
            "in": "query"
          },
          {
            "description": "User ID to associate with the transcript",
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string",
              "description": "User ID to associate with the transcript"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "description": "Whether to generate embeddings",
            "required": false,
            "schema": {
              "title": "Generate Embeddings",
              "type": "boolean",
              "description": "Whether to generate embeddings",
              "default": true
            },
            "name": "generate_embeddings",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_transcript_api_transcripts_api_transcripts_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/search": {
      "post": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Search Transcripts",
        "description": "Search for transcripts by semantic similarity.",
        "operationId": "search_transcripts_api_transcripts_api_transcripts_search_post",
        "parameters": [
          {
            "description": "Search query",
            "required": true,
            "schema": {
              "title": "Query",
              "type": "string",
              "description": "Search query"
            },
            "name": "query",
            "in": "query"
          },
          {
            "description": "Filter by user ID",
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string",
              "description": "Filter by user ID"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "description": "Filter by tags",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by tags"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "description": "Maximum number of results to return",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Maximum number of results to return",
              "default": 5
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Search Transcripts Api Transcripts Api Transcripts Search Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TranscriptSearch"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transcripts/api/transcripts/tags": {
      "get": {
        "tags": [
          "transcripts",
          "transcripts"
        ],
        "summary": "Get Transcript Tags",
        "description": "Get all transcript tags.",
        "operationId": "get_transcript_tags_api_transcripts_api_transcripts_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Transcript Tags Api Transcripts Api Transcripts Tags Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TranscriptTagResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint for health check.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/process-audio": {
      "post": {
        "summary": "Process Audio",
        "operationId": "process_audio_process_audio_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_audio_process_audio_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/audio/{filename}": {
      "get": {
        "summary": "Get Audio",
        "description": "Serve audio files from the temporary directory.",
        "operationId": "get_audio_audio__filename__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Filename",
              "type": "string"
            },
            "name": "filename",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submit-context": {
      "post": {
        "summary": "Submit Context",
        "operationId": "submit_context_submit_context_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_submit_context_submit_context_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-interview": {
      "post": {
        "summary": "Generate Interview",
        "operationId": "generate_interview_generate_interview_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentResponse": {
        "title": "AgentResponse",
        "required": [
          "response",
          "session_id",
          "agent",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "response": {
            "title": "Response",
            "type": "string",
            "description": "The agent's response text"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          },
          "agent": {
            "title": "Agent",
            "type": "string",
            "description": "Agent that provided the response"
          },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "description": "ISO timestamp of the response"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "description": "Additional response metadata"
          }
        },
        "description": "Model for agent responses."
      },
      "AudioResponse": {
        "title": "AudioResponse",
        "required": [
          "audio_url",
          "transcription"
        ],
        "type": "object",
        "properties": {
          "audio_url": {
            "title": "Audio Url",
            "type": "string",
            "description": "URL to the processed audio file"
          },
          "transcription": {
            "title": "Transcription",
            "type": "string",
            "description": "Transcription of the audio"
          }
        },
        "description": "Response model for audio processing."
      },
      "Body_import_transcript_api_transcripts_api_transcripts_import_post": {
        "title": "Body_import_transcript_api_transcripts_api_transcripts_import_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Body_process_audio_process_audio_post": {
        "title": "Body_process_audio_process_audio_post",
        "required": [
          "audio_file"
        ],
        "type": "object",
        "properties": {
          "audio_file": {
            "title": "Audio File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Body_submit_context_submit_context_post": {
        "title": "Body_submit_context_submit_context_post",
        "required": [
          "job_role",
          "job_description"
        ],
        "type": "object",
        "properties": {
          "job_role": {
            "title": "Job Role",
            "type": "string"
          },
          "job_description": {
            "title": "Job Description",
            "type": "string"
          },
          "resume_file": {
            "title": "Resume File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ContextResponse": {
        "title": "ContextResponse",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Status message"
          }
        },
        "description": "Response model for context submission."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "InterviewConfig": {
        "title": "InterviewConfig",
        "required": [
          "job_role"
        ],
        "type": "object",
        "properties": {
          "job_role": {
            "title": "Job Role",
            "type": "string",
            "description": "Target job role for the interview"
          },
          "job_description": {
            "title": "Job Description",
            "type": "string",
            "description": "Detailed job description",
            "default": ""
          },
          "interview_style": {
            "title": "Interview Style",
            "type": "string",
            "description": "Style of interview (FORMAL, CASUAL, AGGRESSIVE, TECHNICAL)",
            "default": "FORMAL"
          },
          "mode": {
            "title": "Mode",
            "type": "string",
            "description": "Operating mode for the orchestrator",
            "default": "interview"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User identifier"
          }
        },
        "description": "Model for configuring a new interview session."
      },
      "InterviewRequest": {
        "title": "InterviewRequest",
        "required": [
          "user_input",
          "job_role"
        ],
        "type": "object",
        "properties": {
          "user_input": {
            "title": "User Input",
            "type": "string",
            "description": "User's input or context"
          },
          "job_role": {
            "title": "Job Role",
            "type": "string",
            "description": "Target job role"
          },
          "job_description": {
            "title": "Job Description",
            "type": "string",
            "description": "Job description",
            "default": ""
          }
        },
        "description": "Request model for generating interview questions."
      },
      "InterviewResponse": {
        "title": "InterviewResponse",
        "required": [
          "generated_text"
        ],
        "type": "object",
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string",
            "description": "Generated interview content"
          }
        },
        "description": "Response model for generated interview content."
      },
      "ResourceAction": {
        "title": "ResourceAction",
        "required": [
          "session_id",
          "resource_id",
          "action",
          "skill_name"
        ],
        "type": "object",
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          },
          "resource_id": {
            "title": "Resource Id",
            "type": "string",
            "description": "Resource identifier or URL"
          },
          "action": {
            "title": "Action",
            "type": "string",
            "description": "Action taken (click, bookmark, etc.)"
          },
          "skill_name": {
            "title": "Skill Name",
            "type": "string",
            "description": "Skill name the resource is for"
          },
          "tracking_metadata": {
            "title": "Tracking Metadata",
            "type": "object",
            "description": "Additional metadata"
          }
        },
        "description": "Model for tracking resource actions."
      },
      "ResourceFeedbackModel": {
        "title": "ResourceFeedbackModel",
        "required": [
          "session_id",
          "resource_id",
          "feedback",
          "skill_name"
        ],
        "type": "object",
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          },
          "resource_id": {
            "title": "Resource Id",
            "type": "string",
            "description": "Resource identifier or URL"
          },
          "feedback": {
            "title": "Feedback",
            "type": "string",
            "description": "Feedback (helpful, not_helpful)"
          },
          "skill_name": {
            "title": "Skill Name",
            "type": "string",
            "description": "Skill name the resource is for"
          },
          "comments": {
            "title": "Comments",
            "type": "string",
            "description": "User comments about the resource"
          }
        },
        "description": "Model for resource feedback."
      },
      "SessionInfo": {
        "title": "SessionInfo",
        "required": [
          "session_id",
          "job_role",
          "interview_style",
          "mode",
          "created_at",
          "active_agent"
        ],
        "type": "object",
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          },
          "job_role": {
            "title": "Job Role",
            "type": "string",
            "description": "Target job role for the interview"
          },
          "interview_style": {
            "title": "Interview Style",
            "type": "string",
            "description": "Style of the interview"
          },
          "mode": {
            "title": "Mode",
            "type": "string",
            "description": "Current orchestrator mode"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "ISO timestamp of when the session was created"
          },
          "active_agent": {
            "title": "Active Agent",
            "type": "string",
            "description": "Currently active agent"
          }
        },
        "description": "Model for session information."
      },
      "SessionMetrics": {
        "title": "SessionMetrics",
        "required": [
          "total_messages",
          "user_message_count",
          "assistant_message_count",
          "average_user_message_length",
          "average_assistant_message_length"
        ],
        "type": "object",
        "properties": {
          "total_messages": {
            "title": "Total Messages",
            "type": "integer",
            "description": "Total messages in conversation"
          },
          "user_message_count": {
            "title": "User Message Count",
            "type": "integer",
            "description": "Number of user messages"
          },
          "assistant_message_count": {
            "title": "Assistant Message Count",
            "type": "integer",
            "description": "Number of assistant messages"
          },
          "average_user_message_length": {
            "title": "Average User Message Length",
            "type": "number",
            "description": "Average length of user messages"
          },
          "average_assistant_message_length": {
            "title": "Average Assistant Message Length",
            "type": "number",
            "description": "Average length of assistant messages"
          },
          "average_response_time_seconds": {
            "title": "Average Response Time Seconds",
            "type": "number",
            "description": "Average time between messages in seconds"
          },
          "conversation_duration_seconds": {
            "title": "Conversation Duration Seconds",
            "type": "number",
            "description": "Total conversation duration in seconds"
          }
        },
        "description": "Model for session metrics."
      },
      "SkillAssessment": {
        "title": "SkillAssessment",
        "required": [
          "skill_name",
          "category",
          "proficiency",
          "feedback"
        ],
        "type": "object",
        "properties": {
          "skill_name": {
            "title": "Skill Name",
            "type": "string",
            "description": "Name of the assessed skill"
          },
          "category": {
            "title": "Category",
            "type": "string",
            "description": "Skill category (technical, soft, etc.)"
          },
          "proficiency": {
            "title": "Proficiency",
            "type": "integer",
            "description": "Proficiency level (1-5)"
          },
          "feedback": {
            "title": "Feedback",
            "type": "string",
            "description": "Assessment feedback"
          },
          "resources": {
            "title": "Resources",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillResource"
            },
            "description": "Recommended resources"
          }
        },
        "description": "Model for skill assessment data."
      },
      "SkillProfile": {
        "title": "SkillProfile",
        "required": [
          "session_id",
          "job_role",
          "skills",
          "strengths",
          "improvement_areas",
          "overall_match",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          },
          "job_role": {
            "title": "Job Role",
            "type": "string",
            "description": "Target job role"
          },
          "skills": {
            "title": "Skills",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillAssessment"
            },
            "description": "Assessed skills"
          },
          "strengths": {
            "title": "Strengths",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identified strengths"
          },
          "improvement_areas": {
            "title": "Improvement Areas",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Areas for improvement"
          },
          "overall_match": {
            "title": "Overall Match",
            "type": "integer",
            "description": "Overall job match score (0-100)"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "ISO timestamp of creation"
          }
        },
        "description": "Model for a user's complete skill profile."
      },
      "SkillResource": {
        "title": "SkillResource",
        "required": [
          "title",
          "url",
          "description",
          "resource_type",
          "relevance_score"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Resource title"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "Resource URL"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Resource description"
          },
          "resource_type": {
            "title": "Resource Type",
            "type": "string",
            "description": "Type of resource (article, course, video, etc.)"
          },
          "relevance_score": {
            "title": "Relevance Score",
            "type": "integer",
            "description": "Relevance score (1-5)"
          }
        },
        "description": "Model for skill improvement resources."
      },
      "TranscriptCreate": {
        "title": "TranscriptCreate",
        "required": [
          "title",
          "content"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Transcript title"
          },
          "content": {
            "title": "Content",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Transcript content as list of message dictionaries"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Transcript summary"
          },
          "transcript_metadata": {
            "title": "Transcript Metadata",
            "type": "object",
            "description": "Transcript metadata",
            "default": {}
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Interview session ID"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User ID"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tag names"
          },
          "is_imported": {
            "title": "Is Imported",
            "type": "boolean",
            "description": "Whether this transcript was imported",
            "default": false
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean",
            "description": "Whether this transcript is publicly accessible",
            "default": false
          },
          "generate_embeddings": {
            "title": "Generate Embeddings",
            "type": "boolean",
            "description": "Whether to generate embeddings for this transcript",
            "default": true
          }
        },
        "description": "Schema for creating a transcript."
      },
      "TranscriptFormat": {
        "title": "TranscriptFormat",
        "enum": [
          "json",
          "csv",
          "text",
          "markdown"
        ],
        "description": "Enumeration of available transcript export/import formats."
      },
      "TranscriptList": {
        "title": "TranscriptList",
        "required": [
          "total",
          "limit",
          "offset",
          "transcripts"
        ],
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "integer",
            "description": "Total number of transcripts"
          },
          "limit": {
            "title": "Limit",
            "type": "integer",
            "description": "Maximum number of transcripts per page"
          },
          "offset": {
            "title": "Offset",
            "type": "integer",
            "description": "Offset for pagination"
          },
          "transcripts": {
            "title": "Transcripts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptResponse"
            },
            "description": "List of transcripts"
          }
        },
        "description": "Schema for list of transcripts."
      },
      "TranscriptResponse": {
        "title": "TranscriptResponse",
        "required": [
          "title",
          "content",
          "id"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Transcript title"
          },
          "content": {
            "title": "Content",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Transcript content as list of message dictionaries"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Transcript summary"
          },
          "transcript_metadata": {
            "title": "Transcript Metadata",
            "type": "object",
            "description": "Transcript metadata",
            "default": {}
          },
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Transcript ID"
          },
          "interview_session_id": {
            "title": "Interview Session Id",
            "type": "string",
            "description": "Interview session ID"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User ID"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptTagResponse"
            },
            "description": "List of tags",
            "default": []
          },
          "is_imported": {
            "title": "Is Imported",
            "type": "boolean",
            "description": "Whether this transcript was imported",
            "default": false
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean",
            "description": "Whether this transcript is publicly accessible",
            "default": false
          },
          "vector_id": {
            "title": "Vector Id",
            "type": "string",
            "description": "Vector ID for this transcript"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time"
          }
        },
        "description": "Schema for transcript response."
      },
      "TranscriptSearch": {
        "title": "TranscriptSearch",
        "required": [
          "transcript_id",
          "title",
          "content",
          "relevance_score"
        ],
        "type": "object",
        "properties": {
          "transcript_id": {
            "title": "Transcript Id",
            "type": "integer",
            "description": "Transcript ID"
          },
          "fragment_id": {
            "title": "Fragment Id",
            "type": "integer",
            "description": "Fragment ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Transcript title"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "Fragment content"
          },
          "relevance_score": {
            "title": "Relevance Score",
            "type": "number",
            "description": "Relevance score"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Creation timestamp"
          }
        },
        "description": "Schema for transcript search results."
      },
      "TranscriptTagResponse": {
        "title": "TranscriptTagResponse",
        "required": [
          "name",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Tag name"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Tag description"
          },
          "color": {
            "title": "Color",
            "type": "string",
            "description": "Color for the tag (hex code)"
          },
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Tag ID"
          }
        },
        "description": "Schema for transcript tag response."
      },
      "TranscriptUpdate": {
        "title": "TranscriptUpdate",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Transcript title"
          },
          "content": {
            "title": "Content",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Transcript content"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Transcript summary"
          },
          "transcript_metadata": {
            "title": "Transcript Metadata",
            "type": "object",
            "description": "Transcript metadata"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tag names"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean",
            "description": "Whether this transcript is publicly accessible"
          },
          "regenerate_embeddings": {
            "title": "Regenerate Embeddings",
            "type": "boolean",
            "description": "Whether to regenerate embeddings",
            "default": false
          }
        },
        "description": "Schema for updating a transcript."
      },
      "UserMessage": {
        "title": "UserMessage",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "The user's message text"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User identifier"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier"
          }
        },
        "description": "Model for user messages sent to the agent system."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}